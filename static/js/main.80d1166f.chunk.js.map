{"version":3,"sources":["views/Calculator.tsx","routes.ts","layouts/Dashboard.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","root","textAlign","margin","spacing","withoutLabel","marginTop","textField","width","routes","path","sidebarName","hidden","component","useState","amount","fee","usd","btc","values","setValues","result","setResult","useEffect","fetch","then","response","json","data","parseInt","asks","handleChange","prop","event","target","value","replace","classes","className","TextField","style","marginRight","id","label","onChange","InputLabelProps","shrink","variant","Button","color","type","onClick","Typography","redirect","to","switchRoutes","map","key","from","createStyles","display","height","background","overflow","position","float","maxHeight","overflowScrolling","toolbar","mixins","content","flex","contacts","justifyContent","marginLeft","largeIcon","fontSize","Dashboard","CssBaseline","hist","createBrowserHistory","ReactDOM","render","StrictMode","history","document","getElementById"],"mappings":"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","file":"static/js/main.80d1166f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  TextField,\r\n  Button,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: \"center\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    width: \"60ch\",\r\n  },\r\n}));\r\n\r\nconst SignUp = () => {\r\n  // function validateForm() {\r\n  //   return values.username.length > 0 && values.password.length > 0 && values.email.length > 0;\r\n  // }\r\n\r\n  function handleSubmit(event: { preventDefault: () => void }) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  function calculate() {\r\n    setResult(\r\n      ((1 - values.fee / 100) * values.amount) / values.usd / values.btc)\r\n  }\r\n\r\n  const [values, setValues] = useState({\r\n    amount: 0,\r\n    fee: 0,\r\n    usd: 3.33000,\r\n    btc: 0,\r\n  });\r\n  const [result, setResult] = useState(0)\r\n\r\n  useEffect(() => {\r\n    fetch('https://www.binance.com/api/v3/depth?symbol=BTCUSDT&limit=1000')\r\n      .then(response => response.json())\r\n      .then(data => setValues({ ...values, btc: parseInt(data.asks[999][0])}));\r\n  }, [])\r\n\r\n  const handleChange = (prop: string) => (event: {\r\n    target: { value: any };\r\n  }) => {\r\n    setValues({ ...values, [prop]: event.target.value.replace(/,/g, '') });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        style={{ width: \"35%\", marginRight: \"5px\" }}\r\n        id=\"outlined-size-normal\"\r\n        label=\"Amount\"\r\n        // value={values.amount}\r\n        onChange={handleChange(\"amount\")}\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n      />\r\n      <br></br>\r\n      <TextField\r\n        style={{ width: \"35%\", marginRight: \"5px\" }}\r\n        id=\"outlined-size-normal\"\r\n        label=\"Fee\"\r\n        value={values.fee}\r\n        onChange={handleChange(\"fee\")}\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n      />\r\n      <br></br>\r\n      <TextField\r\n        style={{ width: \"35%\", marginRight: \"5px\" }}\r\n        id=\"outlined-size-normal\"\r\n        label=\"USD\"\r\n        value={values.usd}\r\n        onChange={handleChange(\"usd\")}\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n      />\r\n      <br></br>\r\n      <TextField\r\n        style={{ width: \"35%\", marginRight: \"5px\" }}\r\n        id=\"outlined-size-normal\"\r\n        label=\"BTC\"\r\n        value={values.btc}\r\n        onChange={handleChange(\"btc\")}\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n      />\r\n      <br></br>\r\n      <br></br>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        // disabled={!validateForm()}\r\n        onClick={() => calculate()}\r\n      >\r\n        חשב\r\n      </Button>\r\n      <br></br>\r\n      {result !== 0 && (<Typography variant=\"h6\">\r\n        BTC: {result}\r\n      </Typography>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","\r\nimport Calculator from \"views/Calculator\";\r\nconst routes = [\r\n  // {\r\n  //   path: \"/login\",\r\n  //   sidebarName: \"התחברות\",\r\n  //   component: LoginPage,\r\n  //   hidden : true,\r\n  //   icon: HomeIcon\r\n  // },\r\n  {\r\n    path: \"/Bitcoin-Calculator\",\r\n    sidebarName: \"מחשבון\",\r\n    hidden:true,\r\n    component: Calculator\r\n  },\r\n  { redirect: true, path: \"/\", to: \"/calculator\" },\r\n];\r\n\r\nexport default routes;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\nimport routes from \"routes\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst switchRoutes = (\r\n  <Switch>\r\n    {routes.map((prop, key) => {\r\n      if (prop.redirect && prop.path !== '')\r\n        return <Redirect from={prop.path} to={prop.to} key={key} />;\r\n      if (prop.path)\r\n        return <Route path={prop.path} component={prop.component} key={key} />;\r\n    })}\r\n  </Switch>\r\n);\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      height: \"100vh\",\r\n      background: \"linear-gradient(#a9ddd6, #58ced6)\",\r\n      // [theme.breakpoints.up(\"sm\")]: {\r\n      //   width: `calc(100% - ${240}px)`\r\n      // },\r\n      overflow: \"auto\",\r\n      position: \"relative\",\r\n      float: \"left\",\r\n      // ...transition,\r\n      maxHeight: \"100%\",\r\n      width: \"100%\",\r\n      overflowScrolling: \"touch\"\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flex: 1,\r\n      margin: \"3%\",\r\n    },\r\n    contacts: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      marginLeft:'5%'\r\n    },\r\n    largeIcon: {\r\n      width: 45,\r\n      height: 45,\r\n      fontSize : 45,\r\n      marginTop : '10px'\r\n    },\r\n  })\r\n);\r\n\r\nconst Dashboard = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      {/* <div style={{marginTop : '15%', width : '60px'}}> */}\r\n      {/* {routes.map((route) => \r\n        !route.hidden ?\r\n        <NavLink\r\n        to={route.path}\r\n        activeStyle={{\r\n          fontWeight: \"bold\",\r\n          color: \"black\",\r\n          display: \"block\"\r\n        }}\r\n        style={{\r\n          textDecoration: \"none\",\r\n          // \"&:hover,&:focus,&:visited,&\": {\r\n          color: \"#7C7E8E\"\r\n          // }\r\n        }} \r\n      >\r\n        <IconButton className={classes.largeIcon} aria-label=\"settings\">\r\n        {route.icon && <route.icon className={classes.largeIcon}></route.icon>}\r\n        </IconButton>\r\n        </NavLink> : null\r\n      )} */}\r\n      {/* </div> */}\r\n      <div style={{width : '100%'}}>\r\n      {/* <div className={classes.contacts}>\r\n        <ImportatntContacts></ImportatntContacts>\r\n      </div> */}\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {switchRoutes}\r\n      </main>\r\n      </div>\r\n      {/* </AppContext.Provider> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Dashboard from \"layouts/Dashboard\"\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nconst hist = createBrowserHistory();\r\n\r\n\r\n// (async () => {\r\n//     let myApp = await runApp(\r\n//     <React.StrictMode> <Router history={hist}>\r\n//                             <Switch>\r\n//                                 <Route path=\"\" component={Dashboard}></Route>\r\n//                             </Switch>\r\n//                         </Router></React.StrictMode>)\r\n                        \r\n    ReactDOM.render(\r\n    <React.StrictMode> <Router history={hist}>\r\n        <Switch>\r\n            <Route path=\"\" component={Dashboard}></Route>\r\n        </Switch>\r\n    </Router></React.StrictMode>,\r\n    \r\n         document.getElementById('root')\r\n    )\r\n// })();\r\n\r\n    \r\n// var request = { scopes: ['user.read'] };\r\n\r\n// msalInstance.handleRedirectCallback((error : any) => {\r\n//   if (error) {\r\n//     console.log(error);\r\n//   } else {\r\n//     refreshUi();\r\n//   }\r\n// });\r\n\r\n\r\n// if (msalInstance.getAccount()) {\r\n//   msalInstance.acquireTokenSilent(request)\r\n//     .then((res : any) => {\r\n//       sessionStorage.setItem(\"msal.idtoken\", res.accessToken);\r\n//       refreshUi();\r\n//     })\r\n//     .catch((err : any) => {\r\n//       if (err.name == \"InteractionRequiredAuthError\") {\r\n//         msalInstance.acquireTokenRedirect(request)\r\n//         //   .then((res : any) => {\r\n//         //     console.log(\"succeeded\");\r\n//         //   })\r\n//         //   .catch((err : any) => {\r\n//         //     console.log(err);\r\n//         //   })\r\n//       }\r\n//     })\r\n// } else {\r\n//   msalInstance.loginRedirect(request)\r\n// }\r\n"],"sourceRoot":""}